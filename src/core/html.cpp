#include <tegia/core/html.h>


void extractText(xmlNode* node, std::ostringstream& out) 
{
    for (xmlNode* cur = node; cur != nullptr; cur = cur->next) 
	{
        if (cur->type == XML_TEXT_NODE) 
		{
            out << (const char*)cur->content;
        }
        extractText(cur->children, out);
    }
}


namespace tegia {  
namespace html { 


////////////////////////////////////////////////////////////////////////////////////////////
/*

*/
////////////////////////////////////////////////////////////////////////////////////////////


document_t::document_t()
{
   
};


////////////////////////////////////////////////////////////////////////////////////////////
/*

*/
////////////////////////////////////////////////////////////////////////////////////////////


document_t::~document_t()
{
	if (this->_is_load == true) 
	{
		xmlFreeDoc(this->_doc);
	}
	xmlCleanupParser();
};


////////////////////////////////////////////////////////////////////////////////////////////
/*

*/
////////////////////////////////////////////////////////////////////////////////////////////


bool document_t::load(const std::string& html)
{
	if (this->_is_load == true) 
	{
		xmlFreeDoc(this->_doc);
	}
    
	this->_doc = htmlReadMemory(
		html.c_str(), 
		html.size(), 
		nullptr, 
		nullptr,
        HTML_PARSE_RECOVER | HTML_PARSE_NOERROR | HTML_PARSE_NOWARNING
	);

	this->_is_load = true;
	if (!this->_doc)
	{
		this->_is_load = false;
	};

	return this->_is_load;
};


////////////////////////////////////////////////////////////////////////////////////////////
/*

*/
////////////////////////////////////////////////////////////////////////////////////////////


std::string document_t::text()
{
	std::ostringstream result;
    xmlNode* root = xmlDocGetRootElement(this->_doc);
    extractText(root, result);
	return result.str();
};


////////////////////////////////////////////////////////////////////////////////////////////
/*

*/
////////////////////////////////////////////////////////////////////////////////////////////


} // END namespace html
} // END namespace core